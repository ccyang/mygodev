---
- name: Install tools for adding PPA repositories
  become: true
  apt: name='{{ item }}' state=latest
  with_items:
    - python-software-properties
    - software-properties-common

- name: Install Python dependencies
  become: true
  apt: name='{{ item }}' state=latest update_cache=true
  with_items:
    - libffi-dev
    - gcc

- include: deadsnakes.yml
- include: pypy.yml
- name: Install python
  apt: name=python{{ item.version }} state=latest
  become: true
  with_items: '{{python_dev_versions}}'
- name: Install python-dev
  apt: name=python{{ item.version }}-dev state=latest
  become: true
  with_items: '{{python_dev_versions}}'
#- name: Install python-venv
#  apt: name=python3-venv state=latest
#  become: true
- name: Install extra python support libs
  become: true
  apt: name=python-gdbm state=latest

- name: Remove system package for pip
  apt: name=python-pip state=absent
  become: true
- name: Download get-pip.py
  get_url: url=https://bootstrap.pypa.io/get-pip.py dest=/tmp/get-pip.py mode=0755
- name: Install pip from source
  become: true
  command: "python'{{item.version}}' /tmp/get-pip.py"
  args:
    creates: "/usr/local/bin/pip'{{item.version}}'"
  with_items: '{{python_dev_versions}}'

- name: Create ~/.pip
  file: path='{{ansible_env.HOME}}'/.pip
        state=directory
- name: Create pip wheelhouse
  file: path='{{python_dev_wheelhouse}}'
        state=directory
- name: ~/.pip.conf
  template: src=pip.conf
            dest='{{ansible_env.HOME}}'/.pip/pip.conf

- name: Install OpenSSL
  become: true
  apt: name='{{item}}'
  with_items:
    - openssl
    - libssl-dev

- name: Install pip tools
  pip: name='{{ item[1] }}' executable=pip{{item[0].version}}
  become: true
  with_nested:
    - '{{python_dev_versions}}'
    - [ 'wheel', 'certifi', 'pyopenssl', 'pyasn1', 'ndg-httpsclient' ]

- name: Install Python tools
  pip: name='{{ item }}' state=latest
  become: true
  with_items:
    - pbr
    - tox
    - virtualenv
    - virtualenvwrapper
    - wheel
